language: node_js
node_js:
  - "11"
  - "10"
  - "9"
  
env:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]] ; then
      CLANG_VERSION="export CC=gcc-7 && export CXX=g++-7";
    else
      GCC_VERSION="export CC=gcc-7 && export CXX=g++-7";
    fi
  
os: 
  - linux
  - osx
  
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-7
      - libhdf5-dev
      
osx_image: xcode8

before_install:
  - wget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-1.10.2/src/hdf5-1.10.2.tar.gz -O /tmp/hdf5-1.10.2.tar.gz
  - tar -zxvf /tmp/hdf5-1.10.2.tar.gz
  - cd `pwd`/hdf5-1.10.2
  - ./configure --prefix=`pwd`/dist --enable-shared=yes --enable-static=no --enable-parallel=no --enable-hl --enable-build-mode=production --without-szlib
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]] ; then make -j2 2>&1 &> hdf5_screen.txt ; else export HUH ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]] ; then make install ; else export HUH ; fi
  - which g++
  - g++ --version
  - cd ..
  - export HDF5_HOME=`pwd`/hdf5-1.10.2/dist
  
install:
  - export HDF5_HOME_MAC=`pwd`/hdf5-1.10.2/dist
  - export HDF5_HOME_LINUX=/usr/lib/x86_64-linux-gnu/hdf5/serial
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]] ; then echo ${HDF5_HOME} ; else eval "${GCC_VERSION}" ; fi
  # ${CXX} --version
  - npm install --longlong_type=LONGLONG53BITS --hdf5_home_mac=${HDF5_HOME_MAC} --hdf5_home_linux=${HDF5_HOME_LINUX}

before-scripte:
  - export PATH=`pwd`/node_modules/.bin:${PATH}
  - export LD_LIBRARY_PATH=`pwd`/hdf5-1.10.2/dist/lib:${LD_LIBRARY_PATH}
  - export DYLD_LIBRARY_PATH=`pwd`/hdf5-1.10.2/dist/lib:${DYLD_LIBRARY_PATH}
  
script:
  - export PATH=`pwd`/node_modules/.bin:${PATH}
  - export LD_LIBRARY_PATH=`pwd`/hdf5-1.10.2/dist/lib:${LD_LIBRARY_PATH}
  - export DYLD_LIBRARY_PATH=`pwd`/hdf5-1.10.2/dist/lib:${DYLD_LIBRARY_PATH}
  - echo ${PATH}
  - ls `pwd`/node_modules/.bin
  - mocha --harmony --require should
